import { Media } from "../types";
import { WeverseCommunity } from ".";
declare const WeverseMedia_base: new (t: {
    id: number;
    communityId: number;
    body: string;
    type: import("../types").MediaTypes;
    thumbnailPath: URL;
    title: string;
    extVideoPath: URL | undefined;
    youtubeId: string | undefined;
    likeCount: number;
    playCount: number;
    commentCount: number;
    createdAt: Date;
    updatedAt: Date;
    photos: {
        mediaId: number | undefined;
        postId: number;
        imgUrl: URL;
        imgWidth: number;
        imgHeight: number;
        id: number;
        contentIndex: number;
        thumbnailImgUrl: URL;
        thumbnailImgWidth: number;
        thumbnailImgHeight: number;
        orgImgUrl: URL;
        orgImgWidth: number;
        orgImgHeight: number;
        downloadImgFilename: string;
        isGif: boolean;
    }[];
}) => {
    id: number;
    communityId: number;
    body: string;
    type: import("../types").MediaTypes;
    thumbnailPath: URL;
    title: string;
    extVideoPath: URL | undefined;
    youtubeId: string | undefined;
    likeCount: number;
    playCount: number;
    commentCount: number;
    createdAt: Date;
    updatedAt: Date;
    photos: {
        mediaId: number | undefined;
        postId: number;
        imgUrl: URL;
        imgWidth: number;
        imgHeight: number;
        id: number;
        contentIndex: number;
        thumbnailImgUrl: URL;
        thumbnailImgWidth: number;
        thumbnailImgHeight: number;
        orgImgUrl: URL;
        orgImgWidth: number;
        orgImgHeight: number;
        downloadImgFilename: string;
        isGif: boolean;
    }[];
};
export declare class WeverseMedia extends WeverseMedia_base {
    community: WeverseCommunity;
    constructor(props: Media, community: WeverseCommunity);
    toJSON(): Partial<WeverseMedia>;
}
export {};
